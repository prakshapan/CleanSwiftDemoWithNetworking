//
//  DogsListPresenter.swift
//  CleanWithNetworking
//
//  Created by EightSquare on 1/31/18.
//  Copyright (c) 2018 EightSquare. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DogsListPresentationLogic
{
    func presentFetchedData(response: DogsList.FetchData.Response)
}

class DogsListPresenter: DogsListPresentationLogic
{
    weak var viewController: DogsListDisplayLogic?
    
    // MARK: Do something
    
    func presentFetchedData(response: DogsList.FetchData.Response)
    {
        // MANIPULATE DATA HERE TO POPULATE DATA MODEL
        // THE DATA THAT ARE VISIBLE
        let breedName = Array(response.dogApi.message!.keys)
        var breedTypes = [String]()
        var breedType = ""
        for (_, dogType) in Array(response.dogApi.message!.values).enumerated() {
            breedType = ""
            if dogType.count > 0 {
                for (index, value) in dogType.enumerated() {
                    breedType = breedType + ("\n \(index + 1): \(value)")
                }
                breedTypes.append(breedType)
            } else {
                breedTypes.append("")
            }
        }

        let viewModel = DogsList.FetchData.ViewModel(breedName: breedName, breedTypes: breedTypes)
        viewController?.presentFetchedData(viewModel: viewModel)
        
    }
}
